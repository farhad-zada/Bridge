{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x7A1676cB3CCa886D568369d918aC77d1643398ca",
      "txHash": "0xd963d39cd11934f6683734d66066d46d71d4059eb204290610effa31482b90c1",
      "kind": "uups"
    }
  ],
  "impls": {
    "47bb0b844b885e656aa0bb2f7714efd699faeee346dad04f80858f7fa1598108": {
      "address": "0xeb3ff395da8890014843bceA4E12a722cf3348bF",
      "txHash": "0x6aa85d03a60a097d8f1a503c5c4f248f247ef3a6771a26e9feafd088178b26e4",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "allowlistedChains",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint64,t_bool)",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:37"
          },
          {
            "label": "s_router",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IRouterClient)51",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:39"
          },
          {
            "label": "s_linkToken",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IERC20)184",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)184": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRouterClient)51": {
            "label": "contract IRouterClient",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
